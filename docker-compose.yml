version: '3.8'

services:

  pet-api:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: pet-api
    ports:
      - 5000:5000
    volumes:
      - ./backend:/app
      - ./backend/postgres-database:/var/lib/postgresql/data
    environment:
      - SECRET_KEY
    depends_on:
      - postgreSQL
    env_file:
      - ./backend/backing-pet/.env
  
  pet-web:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: pet-web
    ports:
      - 3000:3000
    volumes:
      - ./frontend/reacting-pet:/reacting-pet
    depends_on:
      - pet-api

  postgreSQL:
    image: postgres:latest
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: petapp-database
    volumes:
      - ./backend/postgres-database:/var/lib/postgresql/data
    ports:
      - 5432:5432

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: name@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgreSQL
    logging:
      driver: "none"
    volumes:
      - ./backend/pgadmin/pgadmin-entrypoint.sh:/pgadmin-entrypoint.sh
    entrypoint: /pgadmin-entrypoint.sh
